{"version":3,"sources":["components/common/ContentContainer.js","components/about/AboutComponent.js","repository/projects.js","components/projects/ProjectsComponent.js","components/contacts/ContactsComponent.js","components/not-found/NotFoundComponent.js","components/navbar/NavBar.js","components/techStack/StackComponent.js","components/common/AppContainer.js","App.js","serviceWorker.js","index.js"],"names":["ContentContainer","styled","div","anchor","document","createElement","target","rel","href","AboutComponent","role","aria-label","Segment","style","marginTop","className","src","alt","loop","Infinity","wrapper","steps","Button","primary","size","onClick","click","padding","textAlign","projects","title","url","description","tags","image","openSource","github","ProjectsComponent","map","p","i","key","Item","marginBottom","Content","Group","backgroundImage","Extra","t","Label","Description","secondary","display","ContactComponent","NotFoundComponent","Message","Header","as","Link","to","withRouter","location","Menu","pointing","active","pathname","color","position","StackComponent","bottom","height","verticalAlign","AppContainer","App","render","exact","path","component","Boolean","window","hostname","match","history","createBrowserHistory","ReactDOM","basename","process","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bfb8c264.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ContentContainer = styled.div`\n    max-width: 40rem;\n    margin: 0 auto;\n    padding: 0 1.2rem;\n    margin-top: 30px;\n` ;","import React from 'react';\nimport { ContentContainer } from '../common/ContentContainer';\nimport { Segment, Button } from 'semantic-ui-react';\nimport Typical from 'react-typical';\nimport './about-styles.css';\nimport Pulse from 'react-reveal/Pulse';\n\nconst anchor = document.createElement('a');\nanchor.target = '_blank';\nanchor.rel = 'noopener';\nanchor.href = 'mailto: nicolas.nazzaro@gmail.com';\n\nconst AboutComponent = () => {\n    return (\n        <ContentContainer>\n           <Pulse>\n           <h3>Hi, I'm Nicolas <span role='img' aria-label=''>👋</span></h3>\n           </Pulse>    \n                <Segment style={{marginTop: 30}}>\n                    <div className='about-main-container'>\n                        <img className='about-pic' src='/assets/avatar.png' alt='avatar'/> \n                        <div className='about-inner-container'>\n                            <p><Typical\n                                    loop={Infinity}\n                                    wrapper=\"b\"\n                                    steps={[\n                                        1000,\n                                        \"I'm a full-stack developer\",\n                                        1000,\n                                        \"I'm a digital business expert\"\n                                    ]}/>\n                            </p>\n                            <Button \n                                primary size='tiny'\n                                onClick={() => anchor.click()}\n                            >\n                                Contact me\n                            </Button>\n                        </div>\n                    </div>\n                    <p style={{padding: 10, textAlign: 'justify'}}>\n                        Having previously worked as a business consultant \n                        for some of the most important european tech start-ups, I discovered the need to \n                        combine business logics with technical know-how to build innovative and disruptive platforms.  \n                        Therefore, I decided to learn web development. Doing so I realized that I really enjoy coding and developed a \n                        passion for creating functional and business efficient web applications.\n                    </p>\n                </Segment>\n        </ContentContainer>\n    );\n}\n\nexport default AboutComponent;","export const projects = [\n    {\n        title: 'Reactivities',\n        url: 'http://reactivities.nicolasnazzaro.me',\n        description: 'Twitter clone based on a .NET Core webapi. The front-end is built with a react SPA developed with typescript and MobX for state management. Registration and authentication are managed through .NET Core Identity and jwt tokens. This application is designed for desktop experience only.',\n        tags: ['react', 'react hooks', 'mobx', 'typescript', '.net core', 'core identity', 'webapi'],\n        image: '/assets/reactivities.png',\n        openSource: true,\n        github: 'https://github.com/nicolasnazzaro/Reactivities'\n    },\n    {\n        title: 'Kanban board',\n        url: 'https://nicolasnazzaro.github.io/kanban-board/',\n        description: 'Trello inspired kanban board, realized with react-beatiful-dnd. Lists and cards are draggable and droppable. The board state is managed through Redux and the changes are saved in local storage.',\n        tags: ['react', 'react hooks', 'redux'],\n        image: '/assets/kanban.png',\n        openSource: true,\n        github: 'https://github.com/nicolasnazzaro/kanban-board'\n    },\n    {\n        title: 'Personal web page',\n        url: '',\n        description: 'Web page created with react and react-router-dom.',\n        tags: ['react', 'react hooks'],\n        image: '/assets/portfolio.png',\n        openSource: true,\n        github: 'https://github.com/nicolasnazzaro/personal-webpage'\n    },\n    {\n        title: 'Simple To-Do app',\n        url: 'https://nicolasnazzaro.github.io/to-do-app/',\n        description: 'Simple to-do app create with react stateful components.',\n        tags: ['react'],\n        image: '/assets/todo.png',\n        openSource: true,\n        github: 'https://github.com/nicolasnazzaro/to-do-app'\n    }\n]","import React from 'react';\nimport { ContentContainer } from '../common/ContentContainer';\nimport { Item, Label, Segment } from 'semantic-ui-react';\nimport { projects } from '../../repository/projects';\nimport './projects-styles.css';\nimport Zoom from 'react-reveal/Zoom';\n\nconst ProjectsComponent = () => {\n    return (\n        <ContentContainer>\n           <h3>Projects <span role='img' aria-label=''>🚀</span></h3>\n           <p>Here are some of my favourite open-source projects I've worked on lately.</p>\n           {projects.map(((p, i) => (\n                <Zoom key={i}>\n                    <Item key={i} style={{marginBottom: 45, marginTop: 30}}>\n                        <Item.Content>\n                            <Segment.Group>\n                                <Segment>\n                                        <h3>{p.title}</h3>\n                                        <a href={p.url} target='_blank' rel=\"noopener noreferrer\">\n                                            <div className='div-img' style={{backgroundImage: `url(${p.image})`}}></div>\n                                        </a>\n                                    <Item.Extra>\n                                        {p.tags.map((t, i) => (\n                                                <Label key={i} style={{marginBottom: 5}}>{t}</Label>\n                                        ))}\n                                    </Item.Extra>\n                                </Segment>\n                                <Segment>\n                                    <Item.Description>\n                                        <p>{p.description}</p>\n                                    </Item.Description>\n                                </Segment>\n                                <Segment secondary style={{display: 'flex'}}>\n                                    {!!p.url && \n                                        <a href={p.url} target='_blank' rel=\"noopener noreferrer\">\n                                            <div className='link-container'>\n                                                    <img src='/assets/link.svg' alt='link to linkedin' className='link-icon'/>\n                                                <span className='text'>Website</span>\n                                            </div>\n                                        </a>\n                                    } \n                                    {!!p.github &&\n                                        <a href={p.github} target='_blank' rel=\"noopener noreferrer\">\n                                            <div className='link-container'>\n                                                    <img src='/assets/github.svg' alt='link to linkedin' className='github-icon-r'/>\n                                                <span className='text'>Repository</span>\n                                            </div>\n                                        </a>  \n                                    }               \n                                </Segment>\n                            </Segment.Group>\n                        </Item.Content>\n                    </Item>\n                </Zoom>\n           )))}\n        </ContentContainer>\n    );\n}\n\nexport default ProjectsComponent;","import React from 'react';\nimport { ContentContainer } from '../common/ContentContainer';\nimport './contacts-styles.css';\n\nconst githubUrl = 'https://github.com/nicolasnazzaro?tab=repositories';\nconst linkedinUrl = 'https://www.linkedin.com/in/nicolasnazzaro/';\n\nconst ContactComponent = () => {\n    return (\n        <ContentContainer>\n            <h3>Contact me <span role='img' aria-label=''>☎️</span></h3>\n            <p>If you are interested to know more about me, or you would like to give me a feedback about my work, I'll be thrilled to ear from you.</p>\n            <p style={{marginBottom:25}}>You can reach me through the following media:</p>\n            <a href='mailto: nicolas.nazzaro@gmail.com' target='_blank' rel=\"noopener noreferrer\">\n                <div className='contact-container'>\n                        <img src='/assets/email.svg' alt='email' className='contact-icon'/>\n                    <span className='contact-text'>Drop me an email</span>\n                </div>\n            </a>\n            <a href={linkedinUrl} target='_blank' rel=\"noopener noreferrer\">\n            <div className='contact-container'>\n                    <img src='/assets/linkedin.svg' alt='link to github' className='contact-icon'/>\n                <span className='contact-text'>Go to my Linkedin profile</span>\n            </div>\n            </a>\n            <a href={githubUrl} target='_blank' rel=\"noopener noreferrer\">\n                <div className='contact-container'>\n                        <img src='/assets/github.svg' alt='link to linkedin' className='github-icon'/>\n                    <span className='contact-text'>Find me on Github</span>\n                </div>\n            </a> \n        </ContentContainer>\n    );\n}\n\nexport default ContactComponent;","import React, { Fragment } from 'react';\nimport { Message, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nconst NotFoundComponent = () => {\n    return (\n        <Fragment>\n            <Message>\n                <Message.Header>Not Found</Message.Header>\n                    <p>\n                        The page you're looking for does not exist!\n                    </p>\n            </Message>\n            <Button primary as={Link} to={'/'} size='tiny'>Go back</Button>\n        </Fragment>\n    );\n}\n\nexport default NotFoundComponent;","import React from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport { NavLink } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\n\nconst NavBar = ({location}) => {\n    return (\n        <div>\n        <Menu pointing secondary>\n          <Menu.Item active={location.pathname === \"/\"}>\n              <NavLink style={{color: 'inherit'}} to='/'>About</NavLink>\n          </Menu.Item>\n          <Menu.Item active={location.pathname === \"/projects\"}>\n              <NavLink style={{color: 'inherit'}} to='/projects'>Projects</NavLink>\n          </Menu.Item>\n          <Menu.Item active={location.pathname === \"/stack\"}>\n              <NavLink style={{color: 'inherit'}} to='/stack'>Stack</NavLink>\n          </Menu.Item>\n          <Menu.Menu position='right'>\n          <Menu.Item active={location.pathname === \"/contact\"}>\n              <NavLink style={{color: 'inherit'}} to='/contact'>Contact</NavLink>\n          </Menu.Item>\n          </Menu.Menu>\n        </Menu>\n      </div>\n    );\n}\n\nexport default withRouter(NavBar);","import React from 'react';\nimport { ContentContainer } from '../common/ContentContainer';\nimport { Segment } from 'semantic-ui-react';\nimport Flip from 'react-reveal/Flip';\n\nconst StackComponent = () => {\n    return (\n        <ContentContainer>\n            <h3>My favourite tech stack <span role='img' aria-label=''>🛠️</span></h3>\n            <p>I'm always excited to learn new technologies, however \n                whenever possible I'd rather work with the following stack:\n            </p>\n            <Flip bottom>\n            <Segment style={{marginTop: 30}}>\n            <table>\n                <tbody>\n                    <tr style={{height: 30}}>\n                        <th style={{verticalAlign: 'top'}}>Database:</th>\n                        <td style={{verticalAlign: 'top'}}>MySql (or Sqlite in development) with Entity Framework</td>\n                    </tr>\n                    <tr style={{height: 30}}>\n                        <th style={{verticalAlign: 'top'}}>Back-end:</th>\n                        <td style={{verticalAlign: 'top'}}>.NET Core</td>\n                    </tr>\n                    <tr style={{height: 30}}>\n                        <th style={{verticalAlign: 'top'}}>Front-end:</th>\n                        <td style={{verticalAlign: 'top'}}>React (better with Typescript)</td>\n                    </tr>\n                    <tr style={{height: 30}}>\n                        <th style={{verticalAlign: 'top'}}>State management:</th>\n                        <td style={{verticalAlign: 'top'}}>MobX over Redux</td>\n                    </tr>\n                </tbody>\n            </table>\n            </Segment>\n            </Flip>\n            <p style={{marginTop: 45}}>I'm also familiar with Angular, ASP .NET Framework and .NET Core MVC</p>\n        </ContentContainer>\n    );\n}\n\nexport default StackComponent;","import styled from 'styled-components';\n\nexport const AppContainer = styled.div`\n    max-width: 50rem;\n    margin: 0 auto;\n    padding: 0 1.2rem;\n` ;\n","import React, { Fragment } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport AboutComponent from './components/about/AboutComponent';\nimport ProjectsComponent from './components/projects/ProjectsComponent';\nimport ContactComponent from './components/contacts/ContactsComponent';\nimport NotFoundComponent from './components/not-found/NotFoundComponent';\nimport NavBar from './components/navbar/NavBar';\nimport StackComponent from './components/techStack/StackComponent';\nimport { AppContainer } from './components/common/AppContainer';\n\nconst App = () => {\n  return (\n      <Route render={() => (\n        <Fragment>\n          <AppContainer>\n            <NavBar/>\n            <Switch>\n              <Route exact path='/' component={AboutComponent}/>\n              <Route path='/projects' component={ProjectsComponent}/>\n              <Route path='/contact' component={ContactComponent}/>\n              <Route path='/stack' component={StackComponent}/>\n              <Route path='/notfound' component={NotFoundComponent}/>\n              <Route>\n                <Redirect to='/notfound'/>\n              </Route>\n            </Switch>\n          </AppContainer>\n        </Fragment>\n      )}/>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\n\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}